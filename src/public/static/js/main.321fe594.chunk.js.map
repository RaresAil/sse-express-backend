{"version":3,"sources":["Table.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Table","props","licenseKey","data","map","country","code","currency","level","units","toFixed","colHeaders","rowHeaders","width","height","App","useState","nests","setNests","listening","setListening","useEffect","EventSource","onmessage","event","nestData","JSON","parse","Array","isArray","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAKe,SAASA,EAAMC,GAC5B,OACE,cAAC,IAAD,CACEC,WAAY,gCACZC,KAAMF,EAAME,KAAKC,KAAI,gBAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,KAAMC,EAAlB,EAAkBA,SAAUC,EAA5B,EAA4BA,MAAOC,EAAnC,EAAmCA,MAAnC,MAA+C,CAClEJ,EACAC,EACAC,EACAC,EAAME,QAAQ,GACdD,MAEFE,YAAY,EACZC,YAAY,EACZC,MAAM,MACNC,OAAO,QCYEC,MA3Bf,WAAgB,IAAD,EACaC,mBAAiB,IAD9B,mBACNC,EADM,KACCC,EADD,OAEqBF,oBAAS,GAF9B,mBAENG,EAFM,KAEKC,EAFL,KAoBb,OAhBAC,qBAAU,WACHF,IACY,IAAIG,YAAY,sBACxBC,UAAY,SAACC,GAClB,IAAMC,EAAWC,KAAKC,MAAMH,EAAMrB,MAC9ByB,MAAMC,QAAQJ,GAChBP,EAASO,GAETP,EAAS,GAAD,mBAAKD,GAAL,CAAYQ,MAIxBL,GAAa,MAEd,CAACD,EAAWF,IAGb,qBAAKa,UAAU,MAAf,SACE,cAAC9B,EAAD,CAAOG,KAAMc,OCZJc,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.321fe594.chunk.js","sourcesContent":["import 'handsontable/dist/handsontable.full.css';\nimport { HotTable } from '@handsontable/react';\n\nimport { Nest } from './App';\n\nexport default function Table(props: { data: Nest[] }) {\n  return (\n    <HotTable\n      licenseKey={'non-commercial-and-evaluation'}\n      data={props.data.map(({ country, code, currency, level, units }) => [\n        country,\n        code,\n        currency,\n        level.toFixed(3),\n        units\n      ])}\n      colHeaders={true}\n      rowHeaders={true}\n      width=\"600\"\n      height=\"300\"\n    />\n  );\n}\n","import { useEffect, useState } from 'react';\n\nimport Table from './Table';\n\nfunction App() {\n  const [nests, setNests] = useState<Nest[]>([]);\n  const [listening, setListening] = useState(false);\n\n  useEffect(() => {\n    if (!listening) {\n      const events = new EventSource('/api/v1/sse/events');\n      events.onmessage = (event) => {\n        const nestData = JSON.parse(event.data);\n        if (Array.isArray(nestData)) {\n          setNests(nestData);\n        } else {\n          setNests([...nests, nestData]);\n        }\n      };\n\n      setListening(true);\n    }\n  }, [listening, nests]);\n\n  return (\n    <div className=\"app\">\n      <Table data={nests} />\n    </div>\n  );\n}\n\nexport default App;\n\nexport interface Nest {\n  country: string;\n  code: string;\n  currency: string;\n  level: number;\n  units: string;\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}